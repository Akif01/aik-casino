:root {
  --primary-green: #0f0;
}

body {
  background: linear-gradient(135deg, #001700, #000);
  background-attachment: scroll;
  background-size: auto;
  background-attachment: fixed;
  background-size: cover;
  color: var(--primary-green);
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  border-radius: 6px;
  background-color: var(--primary-green);
  color: #000;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
}

button:hover {
  transform: scale(1.05);
  background-color: var(--primary-green);
}

button:disabled,
button:disabled:hover {
  cursor: not-allowed;
  background-color: gray;
  transform: none;
}

input {
  border: 1px solid var(--primary-green);
  padding: 5px;
  color: white;
}

input:disabled {
  cursor: not-allowed;
  color: gray;
}

.inputGroup {
  position: relative;
}

.inputGroup input {
  padding: 12px 8px;
  font-size: 1rem;
  border: 2px solid #ccc;
  border-radius: 8px;
  outline: none;
  background: none;
}

.inputGroup label {
  position: absolute;
  width: fit-content;
  top: 50%;
  left: 0px;
  transform: translateY(-50%);
  background: transparent;
  padding: 0 4px;
  font-size: 0.9rem;
  pointer-events: none;
  transition: 0.2s ease all;
  border: none;
  text-wrap: nowrap;
}

/* When input is focused or filled */
.inputGroup input:focus+label,
.inputGroup input:not(:placeholder-shown)+label {
  top: -8px;
  font-size: 0.75rem;
}

/* Rainbow border effect on focus */
.inputGroup input:focus {
  border: 2px solid transparent;
  background:
    linear-gradient(black, black) padding-box,
    /* input background */
    linear-gradient(270deg,
      #ff0000,
      #ff7300,
      #fffb00,
      #48ff00,
      #00ffd5,
      #002bff,
      #7a00ff,
      #ff00ab,
      #ff0000) border-box;
  background-size: 300% 300%;
  animation: rainbowBorder 4s linear infinite;
}

@keyframes rainbowBorder {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

@keyframes flyDown {
  from {
    transform: translateY(-40px) scale(1.5);
    opacity: 0;
  }

  to {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

.flyDown {
  animation: flyDown 0.3s ease forwards;
}

.gameSettings {
  display: flex;
  gap: 1rem;
  align-items: baseline;
  width: 100%;
  flex-wrap: wrap;
  justify-content: center;
}

.resultBox {
  background: rgba(26, 26, 26, 0.4);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border-radius: 12px;
  box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.4);
  padding: 1rem;
  text-align: center;
}